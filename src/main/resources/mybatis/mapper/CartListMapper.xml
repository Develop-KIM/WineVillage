<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.winevillage.winevillage.cart.CartListMapper">
	<!-- 회원 장바구니에 상품 추가 -->
	<insert id="addProductToMemberCart"
		parameterType="com.winevillage.winevillage.cart.CartListDTO">
		<!-- 이미 상품이 존재하는지 확인 -->
		<selectKey keyProperty="isProductExist" resultType="int"
			order="BEFORE">
			SELECT COUNT(*) FROM Orders WHERE productCode = #{productCode}
			AND memberNo
			= #{memberNo}
		</selectKey>

		<!-- 상품이 존재하고 재고가 주문량보다 많은 경우에만 수량을 증가시킴 -->
		<if test="isProductExist > 0">
			UPDATE Orders
			SET orderAmount =
			CASE
			WHEN (SELECT stock FROM
			Product WHERE productCode = #{productCode}) >
			orderAmount
			THEN
			orderAmount + 1
			ELSE orderAmount
			END
			WHERE productCode = #{productCode}
			AND memberNo = #{memberNo} AND
			orderAmount &lt; (SELECT stock FROM
			Product WHERE productCode =
			#{productCode})
		</if>

		<!-- 상품이 존재하지 않는 경우에는 새로 추가 -->
		<if test="isProductExist == 0">
			INSERT INTO Orders (orderNo, memberNo, productCode,
			orderAmount)

			VALUES (order_seq.NEXTVAL, #{memberNo},
			#{productCode}, 1
			)
		</if>
	</insert>



	<!-- 비회원 장바구니에 상품 추가 -->
	<insert id="addProductToNonMemberCart"
		parameterType="com.winevillage.winevillage.cart.CartListDTO">
		<!-- 이미 상품이 존재하는지 확인 -->
		<selectKey keyProperty="isProductExist" resultType="int"
			order="BEFORE">
			SELECT COUNT(*) FROM Orders WHERE productCode = #{productCode}
			AND
			cookie_id = #{cookieId}
		</selectKey>

		<!-- 상품이 존재하는 경우에는 수량을 증가시킴 -->
		<if test="isProductExist > 0">
			UPDATE Orders
			SET orderAmount =
			CASE
			WHEN (SELECT stock FROM
			Product WHERE productCode = #{productCode}) >
			orderAmount
			THEN
			orderAmount + 1
			ELSE orderAmount
			END
			WHERE productCode = #{productCode}
			AND cookie_id = #{cookieId} AND
			orderAmount &lt; (SELECT stock FROM
			Product WHERE productCode =
			#{productCode})
		</if>

		<!-- 상품이 존재하지 않는 경우에는 새로 추가 -->
		<if test="isProductExist == 0">
			INSERT INTO Orders (orderNo, cookie_id, productCode,
			orderAmount)
			VALUES (order_seq.NEXTVAL, #{cookieId},
			#{productCode}, 1)
		</if>
	</insert>


	<!-- 비회원 장바구니 리스트 -->
	<select id="getCartListByCookieId"
		resultType="com.winevillage.winevillage.cart.CartListDTO">
		SELECT
		c.*,
		p.*
		FROM
		Orders c
		INNER JOIN
		product p ON
		c.productCode = p.productCode
		WHERE
		c.cookie_id = #{cookieId}
	</select>

	<!-- 회원 장바구니 리스트 -->
	<select id="getCartListByMemberNo"
		resultType="com.winevillage.winevillage.cart.CartListDTO">
		SELECT
		c.*,
		p.*
		FROM
		Orders c
		INNER JOIN
		product p ON
		c.productCode = p.productCode
		WHERE
		c.memberNo = #{memberNo}
		AND
		c.OrderStatus = 'PAYMENT_PENDING'
		AND c.OrderNo IN (
		SELECT
		MAX(OrderNo)
		FROM
		Orders
		WHERE
		memberNo = #{memberNo}
		AND OrderStatus =
		'PAYMENT_PENDING'
		GROUP BY
		productCode, memberNo
		)
	</select>

	<update id="updateOrderQuantity"
		parameterType="com.winevillage.winevillage.cart.CartListMapper">
		UPDATE Orders
		SET orderAmount = #{orderAmount}
		WHERE
		orderNo = #{orderNo}
		AND productCode = #{productCode}
	</update>

	<select id="getCartItem" parameterType="java.util.Map"
		resultType="com.winevillage.winevillage.cart.CartListDTO">
		SELECT o.*, p.*
		FROM Orders o
		JOIN Product p ON o.productCode
		= p.productCode
		WHERE o.orderNo = #{orderNo}
		AND o.productCode =
		#{productCode}
	</select>

	<select id="getMemberNo" resultType="String">
		SELECT memberNo FROM member
		WHERE memberID=#{user_id}
	</select>

	<update id="updateMemberCart">
		UPDATE Orders
		SET memberNo = #{memberNo}
		WHERE
		cookie_id = #{cookieId}
	</update>

	<select id="getCartList"
		resultType="com.winevillage.winevillage.cart.CartListDTO">
		SELECT o.*, p.*
		FROM Orders o
		JOIN Product p ON o.productCode
		= p.productCode
		WHERE o.orderNo = #{orderNo}
		AND o.productCode =
		#{productCode}
	</select>

	<delete id="deleteItems" parameterType="list">
		DELETE FROM Orders
		WHERE (productCode, orderNo) IN
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			(#{item.productCode}, #{item.orderNo})
		</foreach>
	</delete>


</mapper>
